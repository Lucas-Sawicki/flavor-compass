plugins {
    id 'java'
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version "$springBootependencyManagementVersion"
    id 'org.openapi.generator' version "${openapiGeneratorVersion}"
}

group = 'pl.zajavka'
version = '0.0.1-SNAPSHOT'
java {
    sourceCompatibility = '21'
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}

dependencies {

    //spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //annotations
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

    //api
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocOpenApiVersion}"


    //db
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'com.h2database:h2'

    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

//openApiGenerate {
//    generatorName = "java"
//    library = "webclient"
//    configOptions = [
//            serializableModel: "true",
//            dateLibrary: "java8",
//            serializationLibrary: "jackson"
//    ]
//
////    outputDir = "/generated-sources/openapi".toString()
////    inputSpec = "$rootDir/src/main/resources/contracts/api-1.0.0.json".toString()
////    apiPackage = "pl.zajavka.infrastructure.FC.api"
////    modelPackage = "pl.zajavka.infrastructure.FC.model"
//}
////
//sourceSets {
//    main {
//        java.srcDirs += "$buildDir/generated-sources/openapi/src/main/java"
//    }
//}


//compileJava.dependsOn tasks.openApiGenerate

tasks.named('test') {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

compileJava.options.encoding = 'UTF-8'
